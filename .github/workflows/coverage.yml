name: Coverage

on:
  pull_request:
    branches: [main]

jobs:
  coverage:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview

      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov

      - name: Generate coverage
        run: |
          # Default features compile the SQLite backend. Running with
          # `--all-features` would enable both SQLite and Postgres
          # simultaneously which the crate forbids at compile time.
          cargo llvm-cov --workspace --features sqlite --no-report
          cargo llvm-cov report --lcov --output-path lcov.info
          cargo llvm-cov report --codecov --output-path codecov.json

      - name: Install cs tool
        run: curl https://downloads.codescene.io/enterprise/cli/install-cs-coverage-tool.sh | bash -s -- -y
      
      - name: Upload coverage data to CodeScene
        run: cs-coverage upload --format "lcov" --metric "line-coverage" "lcov.info"
        env:
          CS_ACCESS_TOKEN: ${{ secrets.CS_ACCESS_TOKEN }}
