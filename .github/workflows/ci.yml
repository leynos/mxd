name: CI

on:
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        feature: [sqlite, postgres]
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libpq-dev
      - name: Start PostgreSQL
        if: matrix.feature == 'postgres'
        run: |
          docker run --rm --name pg -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=password -e POSTGRES_DB=test -p 5432:5432 -d postgres:15
          until docker exec pg pg_isready -U postgres; do sleep 1; done
      - name: Format
        run: cargo fmt --all -- --check
      - name: Lint
        run: cargo clippy --no-default-features --features ${{ matrix.feature }} -- -D warnings
      - name: Test
        run: cargo test --no-default-features --features ${{ matrix.feature }}

  coverage:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov
      - uses: oven-sh/setup-bun@v2
      - name: Generate coverage for SQLite
        run: |
          cargo llvm-cov --workspace --features sqlite --lcov --output-path lcov-sqlite.info
      - name: Generate coverage for Postgres
        run: |
          cargo llvm-cov --workspace --features postgres --lcov --output-path lcov-postgres.info
      - name: Merge coverage results
        run: bun x lcov-result-merger lcov-sqlite.info lcov-postgres.info > lcov.info
      - name: Install cs tool
        run: |
          curl -fsSL -o install-cs-coverage-tool.sh https://downloads.codescene.io/enterprise/cli/install-cs-coverage-tool.sh
          ACTUAL_SHA256="$(sha256sum install-cs-coverage-tool.sh | awk '{print $1}')"
          if [ "$ACTUAL_SHA256" != "a1c38415c5978908283c0608b648b27e954c93882b15d8b91d052d846c3eabd8" ]; then
            echo "Checksum verification failed for CodeScene install script!"
            exit 1
          fi
          bash install-cs-coverage-tool.sh -y
      - name: Upload coverage data to CodeScene
        run: cs-coverage upload --format "lcov" --metric "line-coverage" "lcov.info"
        env:
          CS_ACCESS_TOKEN: ${{ secrets.CS_ACCESS_TOKEN }}
